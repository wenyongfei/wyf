<?xml version="1.0" encoding="UTF-8"?>
<!-- scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。
	debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="false" scanPeriod="60 seconds" debug="false">
	<springProperty scope="context" name="logLevel" source="log.level"/>
	<springProperty scope="context" name="logPath" source="log.path"/>
	<!-- 定义日志的根目录 -->
	<property name="LOG_HOME" value="${logPath}"/>
	<appender name="STAOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%black %red(%d{yyyy-MM-dd HH:mm:ss}) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger) - %cyan(%msg%n)</pattern>
        </layout>
	</appender>

	<!-- 按照小时回滚文件 -->
	<appender name="FILE_TIME" class="ch.qos.logback.core.rolling.RollingFileAppender">
		 <File>${LOG_HOME}/application</File>
		  <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
 		      <FileNamePattern>${LOG_HOME}/application.%d{yyyy-MM-dd_HH}.log.gz</FileNamePattern>
		  </rollingPolicy>
		  <!-- 日志格式 -->
		  <layout class="ch.qos.logback.classic.PatternLayout">
			  <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
		  </layout>
	</appender>

	<root level="${logLevel}">
		<appender-ref ref="STAOUT" />
		<appender-ref ref="FILE_TIME" />
	</root>
</configuration> 